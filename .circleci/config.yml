# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.15.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/

      - image: circleci/postgres:11.2-alpine-postgis
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: server_wallet_test
          POSTGRES_PASSWORD: ''

    working_directory: ~/apps

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/rps/yarn.lock" }}
            - v1-dependencies-rps
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/tictactoe/yarn.lock" }}
            - v1-dependencies-tictactoe
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/server/yarn.lock" }}
            - v1-dependencies-server
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/wallet/yarn.lock" }}
            - v1-dependencies-wallet
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/magmo-wallet-client/yarn.lock" }}
            - v1-dependencies-magmo-wallet-client
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/fmg-nitro-adjudicator/yarn.lock" }}
            - v1-dependencies-fmg-nitro-adjudicator
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "packages/fmg-core/yarn.lock" }}
            - v1-dependencies-force-move-framework

      - run: npx lerna bootstrap

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - save_cache:
          paths:
            - packages/rps/node_modules
          key: v1-dependencies-{{ checksum "packages/rps/yarn.lock" }}
      - save_cache:
          paths:
            - packages/tictactoe/node_modules
          key: v1-dependencies-{{ checksum "packages/tictactoe/yarn.lock" }}
      - save_cache:
          paths:
            - packages/server/node_modules
          key: v1-dependencies-{{ checksum "packages/server/yarn.lock" }}

      - save_cache:
          paths:
            - packages/wallet/node_modules
          key: v1-dependencies-{{ checksum "packages/wallet/yarn.lock" }}
      - save_cache:
          paths:
            - packages/magmo-wallet-client/node_modules
          key: v1-dependencies-{{ checksum "packages/magmo-wallet-client/yarn.lock" }}
      - restore_cache:
          paths:
            - packages/fmg-nitro-adjudicator/node_modules
          key: v1-dependencies-{{ checksum "packages/fmg-nitro-adjudicator/yarn.lock" }}
      - restore_cache:
          paths:
            - packages/force-move-framework/node_modules
          key: v1-dependencies-{{ checksum "packages/fmg-core/yarn.lock" }}

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      # run tests!
      - run: npx lerna run test:ci --stream --concurrency 2 --since origin/master
